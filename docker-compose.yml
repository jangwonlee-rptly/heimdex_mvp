# For production, consider creating a dedicated network for better isolation:
# networks:
#   heimdex-net:
#     driver: bridge

services:
  postgres:
    profiles: ["dev"]
    image: postgres:15-alpine
    container_name: vna-postgres
    environment:
      POSTGRES_DB: ${HEIMDEX_DATABASE_DB:-heimdex}
      POSTGRES_USER: ${HEIMDEX_DATABASE_USER:-heimdex}
      POSTGRES_PASSWORD: ${HEIMDEX_DATABASE_PASSWORD:-heimdex}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${HEIMDEX_DATABASE_USER:-heimdex} -d ${HEIMDEX_DATABASE_DB:-heimdex}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # For production, consider adding resource limits:
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.5'
    #       memory: '512M'

  redis:
    profiles: ["dev"]
    image: redis:7-alpine
    container_name: vna-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # For production, consider adding resource limits:
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.5'
    #       memory: '512M'

  vna:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: Dockerfile
    image: heimdex/vna-dev:latest
    container_name: vna-dev
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED:-1}
      - TZ=${TZ:-Asia/Seoul}
    working_dir: /app
    volumes:
      - ./app:/app/app:rw
      - ./data:/data:rw
      - ./tests:/app/tests:rw
      - ./derived:/app/derived:rw
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/v1/health >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    # For production, consider adding resource limits:
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1'
    #       memory: '1G'

volumes:
  postgres-data:
    name: heimdex-postgres-data
