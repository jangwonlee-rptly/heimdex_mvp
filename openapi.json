{
  "openapi": "3.1.0",
  "info": {
    "title": "Heimdex Vector-Native Archive API",
    "version": "0.1.0",
    "description": "FastAPI surface for ingest, metadata probing, and asset management."
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {"type": "string", "example": "ok"},
          "time": {"type": "string", "format": "date-time"}
        },
        "required": ["status", "time"]
      },
      "EnvCheckResponse": {
        "type": "object",
        "properties": {
          "ffmpeg": {"type": "boolean"},
          "ffprobe": {"type": "boolean"},
          "pyscenedetect": {"type": "boolean"}
        },
        "required": ["ffmpeg", "ffprobe", "pyscenedetect"]
      },
      "IngestInitRequest": {
        "type": "object",
        "properties": {
          "org_id": {"type": "string"},
          "source_name": {"type": "string"},
          "content_length": {"type": "integer", "format": "int64"},
          "content_type": {"type": "string", "nullable": true}
        },
        "required": ["org_id", "source_name", "content_length"]
      },
      "PresignedPayload": {
        "type": "object",
        "properties": {
          "asset_uri": {"type": "string", "format": "uri"},
          "metadata_uri": {"type": "string", "format": "uri", "nullable": true}
        },
        "required": ["asset_uri"]
      },
      "IngestInitResponse": {
        "type": "object",
        "properties": {
          "upload_id": {"type": "string"},
          "presigned": {"$ref": "#/components/schemas/PresignedPayload"}
        },
        "required": ["upload_id", "presigned"]
      },
      "IngestCommitRequest": {
        "type": "object",
        "properties": {
          "org_id": {"type": "string"},
          "upload_id": {"type": "string"},
          "source_uri": {"type": "string", "format": "uri"},
          "weak_threshold_bytes": {"type": "integer", "format": "int64", "nullable": true}
        },
        "required": ["org_id", "upload_id", "source_uri"]
      },
      "IngestCommitResponse": {
        "type": "object",
        "properties": {
          "asset_id": {"type": "string"},
          "source_uri": {"type": "string", "format": "uri"},
          "status": {"type": "string", "enum": ["queued", "ready"]}
        },
        "required": ["asset_id", "source_uri", "status"]
      },
      "ProbeRequest": {
        "type": "object",
        "properties": {
          "org_id": {"type": "string"},
          "source_uri": {"type": "string", "format": "uri"},
          "weak_threshold_bytes": {"type": "integer", "format": "int64", "nullable": true}
        },
        "required": ["org_id", "source_uri"]
      },
      "SidecarModel": {
        "type": "object",
        "additionalProperties": {}
      },
      "ThumbnailPolicy": {
        "type": "object",
        "properties": {
          "interval_s": {"type": "number", "format": "float", "nullable": true},
          "max_count": {"type": "integer", "format": "int32", "nullable": true},
          "max_height": {"type": "integer", "format": "int32", "nullable": true}
        }
      },
      "ThumbnailJobRequest": {
        "type": "object",
        "properties": {
          "org_id": {"type": "string"},
          "source_uri": {"type": "string", "format": "uri"},
          "policy": {"$ref": "#/components/schemas/ThumbnailPolicy"},
          "weak_threshold_bytes": {"type": "integer", "format": "int64", "nullable": true}
        },
        "required": ["org_id", "source_uri"]
      },
      "SidecarJobRequest": {
        "type": "object",
        "properties": {
          "org_id": {"type": "string"},
          "source_uri": {"type": "string", "format": "uri"},
          "weak_threshold_bytes": {"type": "integer", "format": "int64", "nullable": true}
        },
        "required": ["org_id", "source_uri"]
      },
      "JobAcceptedResponse": {
        "type": "object",
        "properties": {
          "job_id": {"type": "string"},
          "location": {"type": "string"}
        },
        "required": ["job_id", "location"]
      },
      "AssetSidecarPointer": {
        "type": "object",
        "properties": {
          "schema_version": {"type": "string", "nullable": true},
          "storage_key": {"type": "string", "nullable": true},
          "etag": {"type": "string", "nullable": true}
        }
      },
      "AssetThumbnailPointer": {
        "type": "object",
        "properties": {
          "idx": {"type": "integer", "format": "int32"},
          "storage_key": {"type": "string"},
          "width": {"type": "integer", "format": "int32", "nullable": true},
          "height": {"type": "integer", "format": "int32", "nullable": true},
          "ts_ms": {"type": "integer", "format": "int64", "nullable": true}
        },
        "required": ["idx", "storage_key"]
      },
      "AssetResponse": {
        "type": "object",
        "properties": {
          "asset_id": {"type": "string"},
          "org_id": {"type": "string"},
          "source_uri": {"type": "string", "format": "uri"},
          "size_bytes": {"type": "integer", "format": "int64", "nullable": true},
          "hash": {"type": "string", "nullable": true},
          "hash_quality": {"type": "string", "nullable": true},
          "status": {"type": "string"},
          "sidecar": {"$ref": "#/components/schemas/AssetSidecarPointer"},
          "thumbnails": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/AssetThumbnailPointer"}
          }
        },
        "required": ["asset_id", "org_id", "source_uri", "status", "sidecar", "thumbnails"]
      },
      "JobResultSidecar": {
        "type": "object",
        "properties": {
          "sidecar_uri": {"type": "string", "format": "uri", "nullable": true},
          "thumbnails": {
            "type": "array",
            "items": {"type": "object"},
            "nullable": true
          }
        }
      },
      "JobError": {
        "type": "object",
        "properties": {
          "code": {"type": "string", "nullable": true},
          "message": {"type": "string"}
        },
        "required": ["message"]
      },
      "JobResponse": {
        "type": "object",
        "properties": {
          "job_id": {"type": "string"},
          "type": {"type": "string"},
          "asset_id": {"type": "string", "nullable": true},
          "status": {"type": "string"},
          "started_at": {"type": "string", "format": "date-time", "nullable": true},
          "finished_at": {"type": "string", "format": "date-time", "nullable": true},
          "result": {"$ref": "#/components/schemas/JobResultSidecar"},
          "error": {"$ref": "#/components/schemas/JobError"}
        },
        "required": ["job_id", "type", "status"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {"type": "string"},
          "detail": {}
        },
        "required": ["error"]
      }
    }
  },
  "paths": {
    "/v1/health": {
      "get": {
        "summary": "Liveness probe",
        "responses": {
          "200": {
            "description": "Successful health check",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/HealthResponse"}
              }
            }
          }
        }
      }
    },
    "/v1/admin/env-check": {
      "get": {
        "summary": "Validate ffmpeg toolchain",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Dependency status",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/EnvCheckResponse"}
              }
            }
          },
          "403": {
            "description": "Admin scope required",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      }
    },
    "/v1/ingest/init": {
      "post": {
        "summary": "Request a presigned upload target",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/IngestInitRequest"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Presigned upload returned",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/IngestInitResponse"}
              }
            }
          },
          "413": {
            "description": "Upload too large",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      }
    },
    "/v1/ingest/commit": {
      "post": {
        "summary": "Register an uploaded asset",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/IngestCommitRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asset committed",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/IngestCommitResponse"}
              }
            }
          },
          "404": {
            "description": "Source not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      }
    },
    "/v1/ingest/probe": {
      "post": {
        "summary": "Run ffprobe normalisation",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ProbeRequest"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Normalised sidecar preview",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/SidecarModel"}
              }
            }
          },
          "404": {
            "description": "Source not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      }
    },
    "/v1/assets/{asset_id}/thumbnails": {
      "post": {
        "summary": "Enqueue thumbnail generation",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/ThumbnailJobRequest"}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Job accepted",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/JobAcceptedResponse"}
              }
            }
          },
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          },
          "409": {
            "description": "Idempotency conflict",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      }
    },
    "/v1/assets/{asset_id}/sidecar": {
      "post": {
        "summary": "Enqueue full sidecar generation",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/SidecarJobRequest"}
            }
          }
        },
        "responses": {
          "202": {
            "description": "Job accepted",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/JobAcceptedResponse"}
              }
            }
          },
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      },
      "get": {
        "summary": "Fetch the persisted sidecar",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {
            "description": "Sidecar JSON",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/SidecarModel"}
              }
            }
          },
          "404": {
            "description": "Sidecar not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      }
    },
    "/v1/assets/{asset_id}": {
      "get": {
        "summary": "Fetch asset snapshot",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {
            "description": "Asset metadata",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/AssetResponse"}
              }
            }
          },
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      }
    },
    "/v1/jobs/{job_id}": {
      "get": {
        "summary": "Inspect job status",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {
            "description": "Job state",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/JobResponse"}
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      }
    }
  }
}
